buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath libs.spring.configuration.property.documenter.gradle.plugin
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: libs.plugins.property.documenter.get().pluginId

dependencies {
    implementation project(':distributed-task-spring-boot-starter')

    implementation libs.spring.boot.starter
    implementation libs.spring.boot.starter.validation
    implementation libs.spring.boot.starter.actuator
    implementation libs.spring.boot.starter.aop
    implementation libs.liquibase
    implementation libs.apache.commons.io

    annotationProcessor libs.spring.boot.configuration.processor

    runtimeOnly libs.postgresql

    // For integration tests
    testImplementation testFixtures(project(':commons-test'))
    testImplementation project(':distributed-task-test-spring-boot-starter')

    testImplementation libs.caffeine
    testImplementation libs.liquibase
    testImplementation libs.spring.boot.starter
    testImplementation libs.postgresql
    testImplementation libs.spring.boot.starter.data.jdbc
    testImplementation(libs.spring.boot.starter.test) {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation libs.testcontainers.postgresql
    testImplementation libs.testcontainers.junit.jupiter
    testImplementation libs.org.awaitility
}

tasks.register('generateAdoc') {
    dependsOn generatePropertyDocument {
        documentName = "DTF base saga Spring configuration properties"
        documentDescription = "This is a document about the configuration properties in saga library module"
        type = "MARKDOWN"
        metadataInput = file("build/classes/java/main/META-INF/spring-configuration-metadata.json")
        outputFile = file("config-prop.md")
        markdownCustomization {
            unknownGroupLocalization = "distributed-task"
        }
    }
}

compileJava.inputs.files(processResources)